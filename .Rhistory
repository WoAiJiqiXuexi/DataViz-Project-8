theme(legend.position = "none") +
xlab("Account of Greenhous Gases") +
ylab("Greenhous Gas equivalents in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by account in the European Union in the year 2017")
#a description should be added
# all countries in the EU, in 2017
# What kind of value is it? CO2 equivalents in tons
plot.2017.total.account.barplot
#-----------------------------
# Question: How similar are different European countries in regard to their account of Greenhouse gas?
env_ac_ainah_r2.2017 <- subset(env_ac_ainah_r2, (TIME == 2017) & !(GEO == "European Union - 28 countries") & !(NACE_R2 == "Total - all NACE activities"))
# First try: Simply use a scatterplot of the biggest two drivers in the European Union in 2017:
# - electricity, gas, steam and air conditioning supply
# - manufacturing
#We can make our dataset then even smaller
env_ac_ainah_r2.2majoracc.2017 <- subset(env_ac_ainah_r2.2017, (NACE_R2 == "Electricity, gas, steam and air conditioning supply") | (NACE_R2 == "Manufacturing"))
# levels(env_ac_ainah_r2.2017$NACE_R2)
#Now the dataset has to change from long to wide data format with the reshape2 package
env_ac_ainah_r2.2majoracc.2017 <- dcast(env_ac_ainah_r2.2majoracc.2017, GEO~NACE_R2, value.var="Value")
#Make a scatterplot
env_ac_ainah_r2 <- read.csv("./Data/Air emissions accounts by NACE Rev. 2 activity (env_ac_ainah_r2)/env_ac_ainah_r2_1_Data.csv")
str(env_ac_ainah_r2)
env_ac_ainah_r2$Value <- levels(env_ac_ainah_r2$Value)[env_ac_ainah_r2$Value]
env_ac_ainah_r2$Value <- gsub(",","",env_ac_ainah_r2$Value)
# 1000 are seperated by comma, e.g. 1,000,000 for a million
# This has to be deleted for the as.numeric to work properly
env_ac_ainah_r2$Value <- as.double(env_ac_ainah_r2$Value) #NAs introduced by coercion!
sum(is.na(env_ac_ainah_r2$Value))
#There are 198 NAs here
#Simple imputation method: Replace NAs by 0
env_ac_ainah_r2$Value <- replace(env_ac_ainah_r2$Value, is.na(env_ac_ainah_r2$Value), 0)
#Check the sum of NAs and the resulting sum is zero.
#shorten the labels of the factors---
#look at the factor names of the account of greenhous gases
levels(env_ac_ainah_r2$NACE_R2)
#too long descriptions shall be shortened, hopefully without changing the meaning
#Careful approch by now
levels(env_ac_ainah_r2$NACE_R2) [levels(env_ac_ainah_r2$NACE_R2) == "Activities of households as employers; undifferentiated goods- and services-producing activities of households for own use"] <- "Activities of households es employers"
#Look at the names of the states
levels(env_ac_ainah_r2$GEO) [levels(env_ac_ainah_r2$GEO) == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
#-----------------------------
# Question: What are the most important drivers of greenhouse gase emission in the European Union?
# First visualisation: A Barplot
#A barplot of the account of greenhous gases for the Total European Union and the year 2017
#the Barplot shall be ordered
env_ac_ainah_r2.total.2017 <- subset(env_ac_ainah_r2, (TIME == 2017) & (GEO == "European Union - 28 countries") & !(NACE_R2 == "Total - all NACE activities"))
#Make a barplot
plot.2017.total.account.barplot <- ggplot(env_ac_ainah_r2.total.2017, aes(x=reorder(NACE_R2,Value), y=Value, fill=NACE_R2))+
geom_bar(stat = "identity", color = "brown") +
coord_flip() +
theme(legend.position = "none") +
xlab("Account of Greenhous Gases") +
ylab("Greenhous Gas equivalents in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by account in the European Union in the year 2017")
#a description should be added
# all countries in the EU, in 2017
# What kind of value is it? CO2 equivalents in tons
plot.2017.total.account.barplot
#-----------------------------
# Question: How similar are different European countries in regard to their account of Greenhouse gas?
env_ac_ainah_r2.2017 <- subset(env_ac_ainah_r2, (TIME == 2017) & !(GEO == "European Union - 28 countries") & !(NACE_R2 == "Total - all NACE activities"))
# First try: Simply use a scatterplot of the biggest two drivers in the European Union in 2017:
# - electricity, gas, steam and air conditioning supply
# - manufacturing
#We can make our dataset then even smaller
env_ac_ainah_r2.2majoracc.2017 <- subset(env_ac_ainah_r2.2017, (NACE_R2 == "Electricity, gas, steam and air conditioning supply") | (NACE_R2 == "Manufacturing"))
# levels(env_ac_ainah_r2.2017$NACE_R2)
#Now the dataset has to change from long to wide data format with the reshape2 package
env_ac_ainah_r2.2majoracc.2017 <- dcast(env_ac_ainah_r2.2majoracc.2017, GEO~NACE_R2, value.var="Value")
#Make a scatterplot
View(env_ac_ainah_r2.2majoracc.2017)
colnames(env_ac_ainah_r2.2majoracc.2017)
plot.2majoracc.2017.scatter <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = colnames(env_ac_ainah_r2.2majoracc.2017)[2] , y = colnames(env_ac_ainah_r2.2majoracc.2017)[3])) +
geom_point(size=2, shape=23)
plot.2majoracc.2017.scatter
plot.2majoracc.2017.scatter <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = colnames(env_ac_ainah_r2.2majoracc.2017)[2] , y = colnames(env_ac_ainah_r2.2majoracc.2017)[3])) +
geom_point(size=1, shape=23)
plot.2majoracc.2017.scatter
env_ac_ainah_r2.2majoracc.2017 <- subset(env_ac_ainah_r2.2majoracc.2017, (colnames(env_ac_ainah_r2.2majoracc.2017)[2] = 0) | (colnames(env_ac_ainah_r2.2majoracc.2017)[3] = 0))
# data set 1
env_ac_ainah_r2 <- read.csv("./Data/Air emissions accounts by NACE Rev. 2 activity (env_ac_ainah_r2)/env_ac_ainah_r2_1_Data.csv")
str(env_ac_ainah_r2)
env_ac_ainah_r2$Value <- levels(env_ac_ainah_r2$Value)[env_ac_ainah_r2$Value]
env_ac_ainah_r2$Value <- gsub(",","",env_ac_ainah_r2$Value)
# 1000 are seperated by comma, e.g. 1,000,000 for a million
# This has to be deleted for the as.numeric to work properly
env_ac_ainah_r2$Value <- as.double(env_ac_ainah_r2$Value) #NAs introduced by coercion!
sum(is.na(env_ac_ainah_r2$Value))
#There are 198 NAs here
#Simple imputation method: Replace NAs by 0
env_ac_ainah_r2$Value <- replace(env_ac_ainah_r2$Value, is.na(env_ac_ainah_r2$Value), 0)
#Check the sum of NAs and the resulting sum is zero.
#shorten the labels of the factors---
#look at the factor names of the account of greenhous gases
levels(env_ac_ainah_r2$NACE_R2)
#too long descriptions shall be shortened, hopefully without changing the meaning
#Careful approch by now
levels(env_ac_ainah_r2$NACE_R2) [levels(env_ac_ainah_r2$NACE_R2) == "Activities of households as employers; undifferentiated goods- and services-producing activities of households for own use"] <- "Activities of households es employers"
#Look at the names of the states
levels(env_ac_ainah_r2$GEO) [levels(env_ac_ainah_r2$GEO) == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
#-----------------------------
# Question: What are the most important drivers of greenhouse gase emission in the European Union?
# First visualisation: A Barplot
#A barplot of the account of greenhous gases for the Total European Union and the year 2017
#the Barplot shall be ordered
env_ac_ainah_r2.total.2017 <- subset(env_ac_ainah_r2, (TIME == 2017) & (GEO == "European Union - 28 countries") & !(NACE_R2 == "Total - all NACE activities"))
#Make a barplot
plot.2017.total.account.barplot <- ggplot(env_ac_ainah_r2.total.2017, aes(x=reorder(NACE_R2,Value), y=Value, fill=NACE_R2))+
geom_bar(stat = "identity", color = "brown") +
coord_flip() +
theme(legend.position = "none") +
xlab("Account of Greenhous Gases") +
ylab("Greenhous Gas equivalents in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by account in the European Union in the year 2017")
#a description should be added
# all countries in the EU, in 2017
# What kind of value is it? CO2 equivalents in tons
plot.2017.total.account.barplot
#-----------------------------
# Question: How similar are different European countries in regard to their account of Greenhouse gas?
env_ac_ainah_r2.2017 <- subset(env_ac_ainah_r2, (TIME == 2017) & !(GEO == "European Union - 28 countries") & !(NACE_R2 == "Total - all NACE activities"))
# First try: Simply use a scatterplot of the biggest two drivers in the European Union in 2017:
# - electricity, gas, steam and air conditioning supply
# - manufacturing
#We can make our dataset then even smaller
env_ac_ainah_r2.2majoracc.2017 <- subset(env_ac_ainah_r2.2017, (NACE_R2 == "Electricity, gas, steam and air conditioning supply") | (NACE_R2 == "Manufacturing"))
# levels(env_ac_ainah_r2.2017$NACE_R2)
#Now the dataset has to change from long to wide data format with the reshape2 package
env_ac_ainah_r2.2majoracc.2017 <- dcast(env_ac_ainah_r2.2majoracc.2017, GEO~NACE_R2, value.var="Value")
#Remove the countries, where there is NA, but now 0
#These countries are Iceland, Norway, Serbia, Switzerland and Turkey.
env_ac_ainah_r2.2majoracc.2017 <- subset(env_ac_ainah_r2.2majoracc.2017, !(colnames(env_ac_ainah_r2.2majoracc.2017)[2] = 0) & !(colnames(env_ac_ainah_r2.2majoracc.2017)[3] = 0))
env_ac_ainah_r2.2majoracc.2017 <- subset(env_ac_ainah_r2.2majoracc.2017, !(colnames(env_ac_ainah_r2.2majoracc.2017)[2] == 0) & !(colnames(env_ac_ainah_r2.2majoracc.2017)[3] == 0))
env_ac_ainah_r2.2majoracc.2017 <- subset(env_ac_ainah_r2.2majoracc.2017, !(colnames(env_ac_ainah_r2.2majoracc.2017)[2] < 1) & !(colnames(env_ac_ainah_r2.2majoracc.2017)[3] < 1)) #matching with 0 doesn't work
colnames(env_ac_ainah_r2.2majoracc.2017)[2]
env_ac_ainah_r2.2majoracc.2017 <- subset(env_ac_ainah_r2.2majoracc.2017, !(env_ac_ainah_r2.2majoracc.2017[2] == 0))
plot.2majoracc.2017.scatter <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = colnames(env_ac_ainah_r2.2majoracc.2017)[2] , y = colnames(env_ac_ainah_r2.2majoracc.2017)[3])) +
geom_point(size=1, shape=23) +
geom_text(label=env_ac_ainah_r2.2majoracc.2017$GEO) +
xlim(min(env_ac_ainah_r2.2majoracc.2017 [2]), max(env_ac_ainah_r2.2majoracc.2017 [2]))
ylim(min(env_ac_ainah_r2.2majoracc.2017 [3]), max(env_ac_ainah_r2.2majoracc.2017 [3]))
plot.2majoracc.2017.scatter
View(env_ac_ainah_r2.2majoracc.2017)
str(env_ac_ainah_r2.2majoracc.2017)
env_ac_ainah_r2.2majoracc.2017 [2]
min(env_ac_ainah_r2.2majoracc.2017 [2])
max(env_ac_ainah_r2.2majoracc.2017 [2])
min(env_ac_ainah_r2.2majoracc.2017 [3])
max(env_ac_ainah_r2.2majoracc.2017 [3])
plot.2majoracc.2017.scatter <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = colnames(env_ac_ainah_r2.2majoracc.2017)[2] , y = colnames(env_ac_ainah_r2.2majoracc.2017)[3])) +
geom_point(size=1, shape=23) +
#geom_text(label=env_ac_ainah_r2.2majoracc.2017$GEO) +
xlim(min(env_ac_ainah_r2.2majoracc.2017 [2]), max(env_ac_ainah_r2.2majoracc.2017 [2]))
ylim(min(env_ac_ainah_r2.2majoracc.2017 [3]), max(env_ac_ainah_r2.2majoracc.2017 [3]))
plot.2majoracc.2017.scatter
colnames(env_ac_ainah_r2.2majoracc.2017)[2]
colnames(env_ac_ainah_r2.2majoracc.2017)[3]
plot.2majoracc.2017.scatter <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = colnames(env_ac_ainah_r2.2majoracc.2017)[2] , y = colnames(env_ac_ainah_r2.2majoracc.2017)[3])) +
geom_point(size=1, shape=23)
plot.2majoracc.2017.scatter
plot.2majoracc.2017.scatter <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017[,2] , y = env_ac_ainah_r2.2majoracc.2017[,3])) +
geom_point(size=1, shape=23) +
geom_text(label=env_ac_ainah_r2.2majoracc.2017$GEO)
#xlim(min(env_ac_ainah_r2.2majoracc.2017 [2]) - 10, max(env_ac_ainah_r2.2majoracc.2017 [2]) + 10)
#ylim(min(env_ac_ainah_r2.2majoracc.2017 [3]) - 10, max(env_ac_ainah_r2.2majoracc.2017 [3]) + 10)
plot.2majoracc.2017.scatter
help(geom_text)
install.packages("ggrepel")
library("ggrepel")
plot.2majoracc.2017.scatter.repel <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017[,2] , y = env_ac_ainah_r2.2majoracc.2017[,3])) +
geom_point(size=1, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017$GEO)
xlab("Emission caused by Energy Supply in tons") +
ylab("Emission caused by Manufacturing in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.repel
plot.2majoracc.2017.scatter.repel <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017[,2] , y = env_ac_ainah_r2.2majoracc.2017[,3])) +
geom_point(size=1, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017$GEO)
xlab("Emission caused by Energy Supply in tons") +
ylab("Emission caused by Manufacturing in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.repel <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017[,2] , y = env_ac_ainah_r2.2majoracc.2017[,3])) +
geom_point(size=1, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017$GEO) +
xlab("Emission caused by Energy Supply in tons") +
ylab("Emission caused by Manufacturing in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.repel
demo_gind <- read.csv("./Data/Population change - Demographic balance and crude rates at national level (demo_gind)/demo_gind_1_Data.csv")
View(demo_gind)
demo_gind.2017 <- subset(demo_gind, (TIME == 2017) & (demo_gind$GEO == env_ac_ainah_r2.2majoracc.2017$GEO))
demo_gind.2017 <- subset(demo_gind, (TIME == 2017))
View(demo_gind.2017)
inner_join(env_ac_ainah_r2.2majoracc.2017, demo_gind.2017)
install.packages("dplyr")
library("dplyr")
inner_join(env_ac_ainah_r2.2majoracc.2017, demo_gind.2017)
test <- inner_join(env_ac_ainah_r2.2majoracc.2017, demo_gind.2017)
View(test)
levels(demo_gind.2017$GEO)
levels(demo_gind.2017$GEO) [levels(demo_gind.2017$GEO) == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
env_ac_ainah_r2.2majoracc.2017.pop <- inner_join(env_ac_ainah_r2.2majoracc.2017, demo_gind.2017)
View(env_ac_ainah_r2.2majoracc.2017.pop)
env_ac_ainah_r2.2majoracc.2017.pop$GHG_by_energy_supply_per_capita <- env_ac_ainah_r2.2majoracc.2017.pop [,2] / env_ac_ainah_r2.2majoracc.2017.pop [,6]
env_ac_ainah_r2.2majoracc.2017.pop$GHG_by_manufacturing_per_capita <- env_ac_ainah_r2.2majoracc.2017.pop [,3] / env_ac_ainah_r2.2majoracc.2017.pop [,6]
demo_gind <- read.csv("./Data/Population change - Demographic balance and crude rates at national level (demo_gind)/demo_gind_1_Data.csv")
demo_gind$Value <- gsub(",","",demo_gind$Value)
demo_gind$Value <- as.double(demo_gind$Value) #NAs introduced by coercion!
demo_gind.2017 <- subset(demo_gind, (TIME == 2017))
#Rename one of the countries
levels(demo_gind.2017$GEO) [levels(demo_gind.2017$GEO) == "Germany (until 1990 former territory of the FRG)"] <- "Germany"
env_ac_ainah_r2.2majoracc.2017.pop <- inner_join(env_ac_ainah_r2.2majoracc.2017, demo_gind.2017)
#inner join seem to have worked. But it is not tidy and more important 5 values are missing.
#Add two new columns with energy ghg / population and manufacturing / population
env_ac_ainah_r2.2majoracc.2017.pop$GHG_by_energy_supply_per_capita <- env_ac_ainah_r2.2majoracc.2017.pop [,2] / env_ac_ainah_r2.2majoracc.2017.pop [,6]
env_ac_ainah_r2.2majoracc.2017.pop$GHG_by_manufacturing_per_capita <- env_ac_ainah_r2.2majoracc.2017.pop [,3] / env_ac_ainah_r2.2majoracc.2017.pop [,6]
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017[,8] , y = env_ac_ainah_r2.2majoracc.2017[,9])) +
geom_point(size=1, shape=23) +
geom_text(label=env_ac_ainah_r2.2majoracc.2017$GEO)
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=1, shape=23) +
geom_text(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO)
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=1, shape=23) +
geom_text(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=5, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
View(env_ac_ainah_r2.total.2017)
gradient = env_ac_ainah_r2.total.2017$Value [NACE_R2 == "Electricity, gas, steam and air conditioning supply"]
gradient = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] +
/env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
gradient = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
rm(gradient)
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
df <- data.frame(x1 = 0, x2 = 1, y1 = 0, y2 = slope)
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df)  geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
str(slope)
#now plot
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
df <- data.frame(x1 = 0, x2 = 4, y1 = 0, y2 = 4*slope)
#now plot
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
df <- data.frame(x1 = 0, x2 = 3, y1 = 0, y2 = 3*slope)
#now plot
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
df <- data.frame(x1 = 0, x2 = 2,5, y1 = 0, y2 = 2,5*slope)
#now plot
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
df <- data.frame(x1 = 0, x2 = 2,9, y1 = 0, y2 = 2,9*slope)
#now plot
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
df <- data.frame(x1 = 0, x2 = 2.9, y1 = 0, y2 = 2.9*slope)
#now plot
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
df <- data.frame(x1 = 0, x2 = 2.7, y1 = 0, y2 = 2.7*slope)
#now plot
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
slope = env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Electricity, gas, steam and air conditioning supply"] /env_ac_ainah_r2.total.2017$Value [env_ac_ainah_r2.total.2017$NACE_R2 == "Manufacturing"]
df <- data.frame(x1 = 0, x2 = 2.6, y1 = 0, y2 = 2.6*slope)
#now plot
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
env_ac_ainah_r2.2017.wide <- dcast(env_ac_ainah_r2.2017, GEO~NACE_R2, value.var="Value")
View(env_ac_ainah_r2.2017.wide)
env_ac_ainah_r2.2017.wide.pca <- prcomp(env_ac_ainah_r2.2017.wide, center = TRUE,scale. = TRUE)
env_ac_ainah_r2.2017.wide.pca <- prcomp(env_ac_ainah_r2.2017.wide[,c(2:22)], center = TRUE,scale. = TRUE)
summary(env_ac_ainah_r2.2017.wide.pca)
install.packages("ggbiplot")
install.packages("RTools")
install.packages("Rtools")
install.packages("ggbiplot")
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
library("ggbiplot")
library(devtools)
install_github("vqv/ggbiplot")
install.packages(devtools)
library(devtools)
install_github("vqv/ggbiplot")
install.packages("devtools")
library("devtools")
install_github("vqv/ggbiplot")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("ggbiplot")
library(tidyverse)
library(HSAUR3)
library(factoextra)
#Make a skree plot
fviz_eig(pca)
#Make a skree plot
fviz_eig(env_ac_ainah_r2.2017.wide.pca)
fviz_pca_ind(env_ac_ainah_r2.2017.wide.pca)
fviz_pca_var(env_ac_ainah_r2.2017.wide.pca)
help(fviz_pca_ind)
fviz_pca_ind(env_ac_ainah_r2.2017.wide.pca, geom = C(1:22,env_ac_ainah_r2.2017.wide$GEO) )
fviz_pca_ind(env_ac_ainah_r2.2017.wide.pca, geom = C(as.character(1:33),env_ac_ainah_r2.2017.wide$GEO) )
fviz_pca_ind(env_ac_ainah_r2.2017.wide.pca, repel = TRUE)
env_ac_ainah_r2.total.timeseries <- subset(env_ac_ainah_r2, (GEO == "European Union - 28 countries") & !(NACE_R2 == "Total - all NACE activities"))
levels(env_ac_ainah_r2$NACE_R2)
env_ac_ainah_r2.total.timeseries <- subset(env_ac_ainah_r2, (GEO == "European Union - 28 countries") & ((NACE_R2 == "Electricity, gas, steam and air conditioning supply") | (NACE_R2 == "Manufacturing") | (NACE_R2 == "Transportation and storage") | (NACE_R2 == "Agriculture, forestry and fishing")))
View(env_ac_ainah_r2.total.timeseries)
env_ac_ainah_r2.total.timeseries.wide <- dcast(env_ac_ainah_r2.total.timeseries, TIME~NACE_R2, value.var="Value")
library("ggplot2")
library("eurostat")
library("reshape2")
library("ggrepel")
library("dplyr")
library(tidyverse)
library(HSAUR3)
library(factoextra)
env_ac_ainah_r2.total.timeseries.wide <- dcast(env_ac_ainah_r2.total.timeseries, TIME~NACE_R2, value.var="Value")
View(env_ac_ainah_r2.total.timeseries.wide)
ggplot(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,2]))+
geom_line(color = "#00AFBB", size = 2)
ggplot(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,2:5]))+
geom_line(color = "#00AFBB", size = 2)
ggplot() +
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,2]),color = "blue", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,3]),color = "green", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,4]),color = "red", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,5]),color = "orange", size = 2)+
xlab("Time in Years") +
ylab("Emission in tons") +
ggtitle ("Time Series of Emission of Greenhous Gas equivalents in tons of different accounts")
help(labs)
ggplot() +
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,2]),color = "blue", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,3]),color = "green", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,4]),color = "red", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,5]),color = "orange", size = 2)+
xlab("Time in Years") +
ylab("Emission in tons") +
ggtitle ("Time Series of Emission of Greenhous Gas equivalents in tons of different accounts") +
labs(colnames(env_ac_ainah_r2.total.timeseries.wide)[2:5])
ggplot() +
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,2]),color = "blue", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,3]),color = "green", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,4]),color = "red", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,5]),color = "orange", size = 2)+
xlab("Time in Years") +
ylab("Emission in tons") +
ggtitle ("Time Series of Emission of Greenhous Gas equivalents in tons of different accounts") +
legend(colnames(env_ac_ainah_r2.total.timeseries.wide)[2:5]) +
labs(colnames(env_ac_ainah_r2.total.timeseries.wide)[2:5])
ggplot() +
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,2]),color = "Agriculture", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,3]),color = "Energy", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,4]),color = "Manufacturing", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,5]),color = "Transportation", size = 2)+
xlab("Time in Years") +
ylab("Emission in tons") +
ggtitle ("Time Series of Emission of Greenhous Gas equivalents in tons of different accounts") +
labs(color = "Legend text")
ggplot() +
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,2]),color = "green", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,3]),color = "red", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,4]),color = "blue", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,5]),color = "orange", size = 2)+
xlab("Time in Years") +
ylab("Emission in tons") +
ggtitle ("Time Series of Emission of Greenhous Gas equivalents in tons of different accounts") +
labs(color = c("A", "B", "C", "D"))
save.image("~/R Workspace/DataVizProjekt - DatenKlima/DataViz - Climate Change - Backup.RData")
fviz_pca_var(env_ac_ainah_r2.2017.wide.pca)
fviz_pca_ind(env_ac_ainah_r2.2017.wide.pca, repel = TRUE)
fviz_pca_var(env_ac_ainah_r2.2017.wide.pca)
View(env_ac_ainah_r2)
plot.2017.total.account.barplot <- ggplot(env_ac_ainah_r2.total.2017, aes(x=reorder(NACE_R2,Value), y=Value, fill=NACE_R2))+
geom_bar(stat = "identity", color = "brown") +
coord_flip() +
theme(legend.position = "none") +
xlab("Account of Greenhous Gases") +
ylab("Greenhous Gas equivalents in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by account in the European Union in the year 2017")
plot.2017.total.account.barplot
ggplot() +
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,2]),color = "green", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,3]),color = "red", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,4]),color = "blue", size = 2)+
geom_line(data = env_ac_ainah_r2.total.timeseries.wide, aes(x = env_ac_ainah_r2.total.timeseries.wide [,1], y = env_ac_ainah_r2.total.timeseries.wide[,5]),color = "orange", size = 2)+
xlab("Time in Years") +
ylab("Emission in tons") +
ggtitle ("Time Series of Emission of Greenhous Gas equivalents in tons of different accounts") +
labs(color = c("A", "B", "C", "D"))
plot.2majoracc.2017.scatter <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017[,2] , y = env_ac_ainah_r2.2majoracc.2017[,3])) +
geom_point(size=1, shape=23) +
geom_text(label=env_ac_ainah_r2.2majoracc.2017$GEO)
xlab("Emission caused by Energy Supply in tons") +
ylab("Emission caused by Manufacturing in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017[,2] , y =env_ac_ainah_r2.2majoracc.2017[,3])) +
geom_point(size=1, shape=23) +
geom_text(label=env_ac_ainah_r2.2majoracc.2017$GEO) +
xlab("Emission caused by Energy Supply in tons") +
ylab("Emission caused by Manufacturing in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter
plot.2majoracc.2017.scatter.repel <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017[,2] , y = env_ac_ainah_r2.2majoracc.2017[,3])) +
geom_point(size=1, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017$GEO) +
xlab("Emission caused by Energy Supply in tons") +
ylab("Emission caused by Manufacturing in tons") +
ggtitle ("Emission of Greenhous Gas equivalents in tons by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.repel
plot.2majoracc.2017.scatter.pop <- ggplot(env_ac_ainah_r2.2majoracc.2017, aes(x = env_ac_ainah_r2.2majoracc.2017.pop[,8] , y = env_ac_ainah_r2.2majoracc.2017.pop[,9])) +
geom_point(size=2, shape=23) +
geom_text_repel(label=env_ac_ainah_r2.2majoracc.2017.pop$GEO) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "segment"), data = df) +
xlab("Emission caused by Energy Supply in tons per capita") +
ylab("Emission caused by Manufacturing in tons per capita") +
ggtitle ("Emission of Greenhous Gas equivalents in tons per capita by the 2 major accounts of different European Countries the year 2017")
plot.2majoracc.2017.scatter.pop
fviz_eig(env_ac_ainah_r2.2017.wide.pca)
env_ac_ainah_r2.2017.wide.pca <- prcomp(env_ac_ainah_r2.2017.wide[,c(2:22)], center = TRUE,scale. = FALSE)
summary(env_ac_ainah_r2.2017.wide.pca)
data.frame(env_ac_ainah_r2.2017.wide.pca$x)
fviz_eig(env_ac_ainah_r2.2017.wide.pca)
fviz_pca_ind(env_ac_ainah_r2.2017.wide.pca, repel = TRUE)
